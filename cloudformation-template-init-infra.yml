# AWSTemplateFormatVersion: '2010-09-09'

# Description: This template creates the initial infrastructure for the application.

# Mappings:
#   SubnetConfig:
#     VPC:
#       CIDR: 10.0.0.0/16
#     PublicSubnet1:
#       CIDR: 10.0.0.0/24
#     PublicSubnet2:
#       CIDR: 10.0.1.0/24
#     PrivateSubnet1:
#       CIDR: 10.0.2.0/24
#     PrivateSubnet2:
#       CIDR: 10.0.3.0/24

# Resources:
#   VPC:
#     Type: AWS::EC2::VPC
#     Properties:
#       CidrBlock: !FindInMap
#         - SubnetConfig
#         - VPC
#         - CIDR
#       EnableDnsSupport: true
#       EnableDnsHostnames: true

#   PublicSubnet1:
#     Type: AWS::EC2::Subnet
#     Properties:
#       VpcId: !Ref VPC
#       CidrBlock: !FindInMap
#         - SubnetConfig
#         - PublicSubnet1
#         - CIDR
#       AvailabilityZone: !Select
#         - 0
#         - !GetAZs
#           Ref: AWS::Region
#       MapPublicIpOnLaunch: true

#   PublicSubnet2:
#     Type: AWS::EC2::Subnet
#     Properties:
#       AvailabilityZone: !Select
#         - 1
#         - !GetAZs
#           Ref: AWS::Region
#       VpcId: !Ref VPC
#       CidrBlock: !FindInMap
#         - SubnetConfig
#         - PublicSubnet2
#         - CIDR
#       MapPublicIpOnLaunch: true
#   PrivateSubnet1:
#     Type: AWS::EC2::Subnet
#     Properties:
#       AvailabilityZone: !Select
#         - 0
#         - !GetAZs
#           Ref: AWS::Region
#       VpcId: !Ref VPC
#       CidrBlock: !FindInMap
#         - SubnetConfig
#         - PrivateSubnet1
#         - CIDR

#   PrivateSubnet2:
#     Type: AWS::EC2::Subnet
#     Properties:
#       AvailabilityZone: !Select
#         - 1
#         - !GetAZs
#           Ref: AWS::Region
#       VpcId: !Ref VPC
#       CidrBlock: !FindInMap
#         - SubnetConfig
#         - PrivateSubnet2
#         - CIDR

#   InternetGateway:
#     Type: AWS::EC2::InternetGateway
#   GatewayAttachment:
#     Type: AWS::EC2::VPCGatewayAttachment
#     Properties:
#       VpcId: !Ref VPC
#       InternetGatewayId: !Ref InternetGateway

#   PublicRouteTable:
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VPC

#   PublicRoute:
#     Type: AWS::EC2::Route
#     DependsOn: GatewayAttachment
#     Properties:
#       RouteTableId: !Ref PublicRouteTable
#       DestinationCidrBlock: 0.0.0.0/0
#       GatewayId: !Ref InternetGateway

#   PublicSubnet1RouteTableAssociation:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       SubnetId: !Ref PublicSubnet1
#       RouteTableId: !Ref PublicRouteTable

#   PublicSubnet2RouteTableAssociation:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       SubnetId: !Ref PublicSubnet2
#       RouteTableId: !Ref PublicRouteTable

#   NatGateway1Attachment:
#     Type: AWS::EC2::EIP
#     DependsOn: GatewayAttachment
#     Properties:
#       Domain: vpc
#   NatGateway2Attachment:
#     Type: AWS::EC2::EIP
#     DependsOn: GatewayAttachment
#     Properties:
#       Domain: vpc

#   NatGateway1:
#     Type: AWS::EC2::NatGateway
#     Properties:
#       AllocationId: !GetAtt NatGateway1Attachment.AllocationId
#       SubnetId: !Ref PublicSubnet1
#   NatGateway2:
#     Type: AWS::EC2::NatGateway
#     Properties:
#       AllocationId: !GetAtt NatGateway2Attachment.AllocationId
#       SubnetId: !Ref PublicSubnet2

#   PrivateRouteTable1:
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VPC
#   PrivateRoute1:
#     Type: AWS::EC2::Route
#     Properties:
#       RouteTableId: !Ref PrivateRouteTable1
#       DestinationCidrBlock: 0.0.0.0/0
#       NatGatewayId: !Ref NatGateway1
#   PrivateRouteTable1Association:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       RouteTableId: !Ref PrivateRoute1
#       SubnetId: !Ref PrivateSubnet1

#   PrivateRouteTable2:
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VPC
  
#   PrivateRoute2:
#       Type: AWS::EC2::Route
#       Properties:
#         RouteTableId: !Ref PrivateRouteTable2
#         DestinationCidrBlock: 0.0.0.0/0
#         NatGatewayId: !Ref NatGateway2
#   PrivateRouteTable2Association:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       RouteTableId: !Ref PrivateRouteTable2
#       SubnetId: !Ref PrivateSubnet2

#     ####
#     # ALB related resources
#     ####

#   PublicLoadBalancerSG:
#     Type: AWS::EC2::SecurityGroup
#     Properties:
#       GroupDescription: Access to the public(igw-elb) facing load balancer
#       VpcId: !Ref VPC
#       SecurityGroupIngress:
#         - CidrIp: 0.0.0.0/0
#           IpProtocol: '-1'
#   PublicLoadBalancer:
#     Type: AWS::ElasticLoadBalancingV2::LoadBalancer
#     Properties:
#       Scheme: internet-facing
#       LoadBalancerAttributes:
#         - Key: idle_timeout.timeout_seconds
#           Value: '30'
#       Subnets:
#         - !Ref PublicSubnet1
#         - !Ref PublicSubnet2
#       SecurityGroups: [!Ref PublicLoadBalancerSG]
