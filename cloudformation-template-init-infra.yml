AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates the initial infrastructure for the application.

Mappings:
    SubnetConfig:
        VPC:
            CIDR: 10.0.0.0/16
        PublicSubnet1:
            CIDR: 10.0.0.0/24
        PublicSubnet2:
            CIDR: 10.0.1.0/24
        PrivateSubnet1:
            CIDR: 10.0.2.0/24
        PrivateSubnet2:
            CIDR: 10.0.3.0/24

Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !FindInMap [SubnetConfig, VPC, CIDR]
            EnableDnsSupport: true
            EnableDnsHostnames: true

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: !FindInMap [SubnetConfig, PublicSubnet1, CIDR]
            AvailabilityZone: !Select [0, !GetAZs '']
            MapPublicIpOnLaunch: true

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: !FindInMap [SubnetConfig, PublicSubnet2, CIDR]
            AvailabilityZone: !Select [1, !GetAZs '']
            MapPublicIpOnLaunch: true

    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: !FindInMap [SubnetConfig, PrivateSubnet1, CIDR]
            AvailabilityZone: !Select [0, !GetAZs '']

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: !FindInMap [SubnetConfig, PrivateSubnet2, CIDR]
            AvailabilityZone: !Select [1, !GetAZs '']

    InternetGateway:
        Type: AWS::EC2::InternetGateway

    GatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref VPC
            InternetGatewayId: !Ref InternetGateway

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC

    PublicRoute:
        Type: AWS::EC2::Route
        DependsOn: GatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet1
            RouteTableId: !Ref PublicRouteTable

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet2
            RouteTableId: !Ref PublicRouteTable

    NatGateway1Attachment:
        Type: AWS::EC2::EIP
        DependsOn: GatewayAttachment
        Properties:
            Domain: vpc

    NatGateway2Attachment:
        Type: AWS::EC2::EIP
        DependsOn: GatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway1Attachment.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2Attachment.AllocationId
            SubnetId: !Ref PublicSubnet2

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC

    PrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateRouteTable1Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC

    PrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivateRouteTable2Association:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref PrivateSubnet2

    PublicLoadBalancerSG:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Access to the public facing load balancer
            VpcId: !Ref VPC
            SecurityGroupIngress:
                - CidrIp: 0.0.0.0/0
                  IpProtocol: '-1'

    PublicLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Scheme: internet-facing
            LoadBalancerAttributes:
                - Key: idle_timeout.timeout_seconds
                  Value: '30'
            Subnets:
                - !Ref PublicSubnet1
                - !Ref PublicSubnet2
            SecurityGroups:
                - !Ref PublicLoadBalancerSG

    DummyTargetGroupPublic:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 6
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 2
            VpcId: !Ref VPC

    PublicLoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        DependsOn:
            - PublicLoadBalancer
        Properties:
            DefaultActions:
                - TargetGroupArn: !Ref DummyTargetGroupPublic
                  Type: forward
            LoadBalancerArn: !Ref PublicLoadBalancer
            Port: 80
            Protocol: HTTP

    ECSCluster:
        Type: AWS::ECS::Cluster
        Properties:
            ClusterName: 'expense-tracker'

    ContainerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Access to the containers
            VpcId: !Ref VPC
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 0
                  ToPort: 65535
                  SourceSecurityGroupId: !Ref PublicLoadBalancerSG

Outputs:
    VpcId:
        Description: The ID of the VPC
        Value: !Ref VPC
    PublicSubnetOne:
        Description: Public subnet 1
        Value: !Ref PublicSubnet1
    PublicSubnetTwo:
        Description: Public subnet 2
        Value: !Ref PublicSubnet2
    PrivateSubnetOne:
        Description: Private subnet 1
        Value: !Ref PrivateSubnet1
    PrivateSubnetTwo:
        Description: Private subnet 2
        Value: !Ref PrivateSubnet2
    ECSCluster:
        Description: ECS Cluster
        Value: !Ref ECSCluster
    VPCCIDR:
        Description: VPC CIDR
        Value: !FindInMap [SubnetConfig, VPC, CIDR]
    PublicLoadBalancer:
        Description: Public Load Balancer
        Value: !Ref PublicLoadBalancer
    PublicLoadBalancerSG:
        Description: Public Load Balancer Security Group
        Value: !Ref PublicLoadBalancerSG
    ExternalUrl:
        Description: External URL
        Value: !Sub http://${PublicLoadBalancer.DNSName}
